version: 0.2

phases:
  install:
    commands:
      # Instala o meio de autenticação com o Kubernetes cluster. Fonte: https://docs.aws.amazon.com/eks/latest/userguide/install-aws-iam-authenticator.html
      - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
      - chmod +x ./aws-iam-authenticator
      - mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
      # Instala o kubectl. Fonte: https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/
      - curl -LO https://dl.k8s.io/release/v1.19.0/bin/linux/amd64/kubectl
      - mv ./kubectl $HOME/bin/kubectl
      - kubectl version --client
      # Desinstala AWS CLI v1 e instala v2. Fonte: https://docs.aws.amazon.com/pt_br/cli/latest/userguide/install-cliv2-linux.html
      - apt-get -qq update && apt-get -qq -y install jq python3-pip python3-dev && pip3 install --upgrade awscli
      - aws --version
      - pip3 uninstall -y awscli
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - mkdir $HOME/local
      - ./aws/install --install-dir $HOME/local/aws-cli --bin-dir $HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - aws --version

  pre_build:
    commands:
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCOUNT_ID="$account_id"
      - echo Connecting to ERC...
      # Conectando ao ecr. Fonte: https://docs.aws.amazon.com/AmazonECR/latest/userguide/getting-started-cli.html
      - echo $(aws ecr get-login-password --region us-east-1)
      - docker login -u AWS -p $(aws ecr-public get-login-password --region $AWS_DEFAULT_REGION) public.ecr.aws/$AWS_ACCOUNT_ID

  build:
    commands:
      - IMAGE_REPO_NAME=keymanager-rest-eduardocury
      - IMAGE_TAG=latest
      - echo Building on `date`
      - java -version
      - echo Building docker image...
      - docker build -t keymanager-rest:$IMAGE_TAG .
      - docker tag keymanager-rest:$IMAGE_TAG public.ecr.aws/$AWS_ACCOUNT_ID/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Building app jar...
      - sh gradlew clean build

  post_build:
    commands:
      - echo Build completed on `date`
      # Faz o push da imagem ao ECR
      - echo Pushing docker image...
      - docker push public.ecr.aws/$AWS_ACCOUNT_ID/$IMAGE_REPO_NAME:$IMAGE_TAG
      # Cria os nodes/services especificados na pasta pipeline/manifestos
      - echo Deploying to cluster...
      # Referência: https://docs.aws.amazon.com/cli/latest/reference/eks/update-kubeconfig.html
      - aws eks --region us-east-1 update-kubeconfig --name cluster-eduardocury --role-arn arn:aws:iam::309816921935:role/eksRole-eduardocury
      - kubectl get svc
      - kubectl apply -f pipeline/manifestos
      - printf '[{"name":"codebuild-docker","image_uri:%s"}]' public.ecr.aws/$AWS_ACCOUNT_ID/$IMAGE_REPO_NAME:$IMAGE_TAG > dadosImagem.json

artifacts:
  files:
    - dadosImagem.json
    - build/libs/*-all.jar